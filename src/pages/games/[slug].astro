// src/pages/games/[slug].astro
---
import Layout from '../../layouts/Layout.astro'
import Header from '../../components/Header.astro'
import Footer from '../../components/Footer.astro'
import CosmicBadge from '../../components/CosmicBadge.astro'
import { getGameBySlug, getGamesByGenre, getAllGames } from '../../lib/cosmic'
import type { GetStaticPaths } from 'astro'

// Required function for static site generation
export const getStaticPaths = (async () => {
  const games = await getAllGames()
  
  return games.map((game) => ({
    params: { slug: game.slug },
  }))
}) satisfies GetStaticPaths

const { slug } = Astro.params

// Get the game data
const game = await getGameBySlug(slug!)

if (!game) {
  return Astro.redirect('/404')
}

// Get related games from the same genre
const relatedGames = game.metadata.genre 
  ? (await getGamesByGenre(game.metadata.genre.id)).filter(g => g.id !== game.id).slice(0, 3)
  : []

const bucketSlug = import.meta.env.COSMIC_BUCKET_SLUG

// Helper functions
const formatDate = (dateString: string): string => {
  try {
    const date = new Date(dateString)
    return date.toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    })
  } catch {
    return dateString
  }
}

const cleanDescription = (html: string): string => {
  return html.replace(/<[^>]*>/g, '').slice(0, 160)
}
---

<Layout 
  title={`${game.metadata.game_title || game.title} - Gaming Hub`}
  description={cleanDescription(game.metadata.description)}
>
  <Header />
  
  <main>
    <!-- Game Hero Section -->
    <section class="py-16 bg-gradient-to-r from-gaming-darker to-gaming-dark">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
          <!-- Game Info -->
          <div>
            <div class="flex items-center gap-4 mb-6">
              {game.metadata.genre && (
                <span 
                  class="px-3 py-1 rounded-full text-sm font-medium text-white"
                  style={`background-color: ${game.metadata.genre.metadata?.genre_color || '#4F46E5'}`}
                >
                  {game.metadata.genre.metadata?.genre_name || game.metadata.genre.title}
                </span>
              )}
              
              {game.metadata.rating && (
                <span class="px-3 py-1 bg-gray-800 rounded-full text-sm text-gray-300">
                  {game.metadata.rating.value}
                </span>
              )}
              
              {game.metadata.featured_game && (
                <span class="px-3 py-1 bg-gaming-accent rounded-full text-sm text-white font-medium">
                  Featured
                </span>
              )}
            </div>
            
            <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">
              {game.metadata.game_title || game.title}
            </h1>
            
            <div class="prose prose-lg prose-invert mb-8">
              <div set:html={game.metadata.description} />
            </div>
            
            <!-- Game Details -->
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6 mb-8">
              {game.metadata.developer && (
                <div>
                  <h3 class="text-sm font-medium text-gray-400 mb-2">Developer</h3>
                  <a 
                    href={`/developers/${game.metadata.developer.slug}`}
                    class="text-lg text-white hover:text-primary-400 transition-colors"
                  >
                    {game.metadata.developer.metadata?.studio_name || game.metadata.developer.title}
                  </a>
                </div>
              )}
              
              {game.metadata.release_date && (
                <div>
                  <h3 class="text-sm font-medium text-gray-400 mb-2">Release Date</h3>
                  <p class="text-lg text-white">
                    {formatDate(game.metadata.release_date)}
                  </p>
                </div>
              )}
              
              {game.metadata.platform && game.metadata.platform.length > 0 && (
                <div class="sm:col-span-2">
                  <h3 class="text-sm font-medium text-gray-400 mb-2">Available On</h3>
                  <div class="flex flex-wrap gap-2">
                    {game.metadata.platform.map((platform) => (
                      <span class="px-3 py-1 bg-gaming-dark border border-gray-700 rounded-lg text-sm text-gray-300">
                        {platform}
                      </span>
                    ))}
                  </div>
                </div>
              )}
            </div>
            
            <!-- Developer Website Link -->
            {game.metadata.developer?.metadata?.website && (
              <a 
                href={game.metadata.developer.metadata.website}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center bg-primary-500 hover:bg-primary-600 text-white px-6 py-3 rounded-lg font-medium transition-colors"
              >
                Visit Developer
                <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
              </a>
            )}
          </div>
          
          <!-- Featured Image -->
          <div class="order-first lg:order-last">
            {game.metadata.featured_image ? (
              <img 
                src={`${game.metadata.featured_image.imgix_url}?w=800&h=600&fit=crop&auto=format,compress`}
                alt={game.metadata.game_title || game.title}
                class="w-full rounded-lg shadow-xl"
                loading="eager"
                width="800"
                height="600"
              />
            ) : (
              <div class="w-full h-96 bg-gradient-to-br from-gray-800 to-gray-900 rounded-lg flex items-center justify-center">
                <div class="text-center">
                  <div class="text-6xl mb-4">ðŸŽ®</div>
                  <p class="text-gray-400">Game Image</p>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>

    <!-- Screenshots Section -->
    {game.metadata.screenshots && game.metadata.screenshots.length > 0 && (
      <section class="py-16 border-t border-gray-800">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 class="text-3xl font-bold text-white mb-8">Screenshots</h2>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {game.metadata.screenshots.map((screenshot, index) => (
              <div class="group cursor-pointer">
                <img 
                  src={`${screenshot.imgix_url}?w=600&h=400&fit=crop&auto=format,compress`}
                  alt={`${game.metadata.game_title || game.title} screenshot ${index + 1}`}
                  class="w-full h-64 object-cover rounded-lg shadow-lg group-hover:shadow-xl transition-all duration-300 group-hover:scale-105"
                  loading="lazy"
                  width="600"
                  height="400"
                />
              </div>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Related Games Section -->
    {relatedGames.length > 0 && (
      <section class="py-16 bg-gaming-dark border-t border-gray-800">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex justify-between items-center mb-8">
            <h2 class="text-3xl font-bold text-white">
              More {game.metadata.genre?.metadata?.genre_name || 'Similar'} Games
            </h2>
            {game.metadata.genre && (
              <a 
                href={`/genres/${game.metadata.genre.slug}`}
                class="text-primary-400 hover:text-primary-300 font-medium transition-colors"
              >
                View All â†’
              </a>
            )}
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {relatedGames.map((relatedGame) => (
              <article class="bg-gaming-darker rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
                <div class="aspect-w-16 aspect-h-9">
                  {relatedGame.metadata.featured_image ? (
                    <img 
                      src={`${relatedGame.metadata.featured_image.imgix_url}?w=600&h=400&fit=crop&auto=format,compress`}
                      alt={relatedGame.metadata.game_title || relatedGame.title}
                      class="w-full h-48 object-cover"
                      loading="lazy"
                      width="600"
                      height="400"
                    />
                  ) : (
                    <div class="w-full h-48 bg-gradient-to-br from-gray-700 to-gray-800 flex items-center justify-center">
                      <div class="text-4xl">ðŸŽ®</div>
                    </div>
                  )}
                </div>
                
                <div class="p-6">
                  <h3 class="text-xl font-bold text-white mb-2 hover:text-primary-400 transition-colors">
                    <a href={`/games/${relatedGame.slug}`}>
                      {relatedGame.metadata.game_title || relatedGame.title}
                    </a>
                  </h3>
                  
                  {relatedGame.metadata.description && (
                    <p class="text-gray-400 text-sm line-clamp-2">
                      {cleanDescription(relatedGame.metadata.description)}
                    </p>
                  )}
                  
                  <div class="flex justify-between items-center mt-4">
                    <a 
                      href={`/games/${relatedGame.slug}`}
                      class="text-primary-400 hover:text-primary-300 font-medium text-sm transition-colors"
                    >
                      Learn More â†’
                    </a>
                    
                    {relatedGame.metadata.rating && (
                      <span class="text-xs text-gray-500">
                        {relatedGame.metadata.rating.value}
                      </span>
                    )}
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Back to Games -->
    <section class="py-8 border-t border-gray-800">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <a 
            href="/games"
            class="inline-flex items-center text-primary-400 hover:text-primary-300 font-medium transition-colors"
          >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
            Back to All Games
          </a>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
  <CosmicBadge bucketSlug={bucketSlug} />
</Layout>