---
import type { Game } from '../../types'

export interface Props {
  game: Game
  featured?: boolean
}

const { game, featured = false } = Astro.props

// Safe access to game properties
const gameTitle = game.metadata?.game_title || game.title || 'Untitled Game'
const description = game.metadata?.description || ''
const featuredImage = game.metadata?.featured_image
const genre = game.metadata?.genre
const developer = game.metadata?.developer
const platforms = game.metadata?.platform || []
const rating = game.metadata?.rating

// Get genre color safely
const genreColor = genre?.metadata?.genre_color || '#6366f1'

// Clean HTML description for excerpt
const getExcerpt = (html: string, length: number = 120): string => {
  const text = html.replace(/<[^>]*>/g, '')
  return text.length > length ? text.substring(0, length) + '...' : text
}
---

<article class={`bg-gaming-dark rounded-lg overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-1 ${featured ? 'ring-2 ring-primary-500' : ''}`}>
  <!-- Featured Badge -->
  {featured && (
    <div class="absolute top-4 left-4 z-10">
      <span class="bg-primary-500 text-white px-3 py-1 rounded-full text-sm font-medium">
        Featured
      </span>
    </div>
  )}
  
  <!-- Game Image -->
  <div class="relative aspect-video overflow-hidden">
    {featuredImage ? (
      <img 
        src={`${featuredImage.imgix_url}?w=800&h=450&fit=crop&auto=format,compress`}
        alt={gameTitle}
        class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
        loading="lazy"
        width="400"
        height="225"
      />
    ) : (
      <div class="w-full h-full bg-gray-800 flex items-center justify-center">
        <span class="text-6xl opacity-50">ðŸŽ®</span>
      </div>
    )}
    
    <!-- Overlay -->
    <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent"></div>
  </div>
  
  <!-- Game Info -->
  <div class="p-6">
    <!-- Genre Tag -->
    {genre && (
      <span 
        class="inline-block px-3 py-1 rounded-full text-xs font-medium text-white mb-3"
        style={`background-color: ${genreColor}`}
      >
        {genre.metadata?.genre_name || genre.title}
      </span>
    )}
    
    <!-- Title -->
    <h3 class="text-xl font-bold text-white mb-2 hover:text-primary-400 transition-colors">
      <a href={`/games/${game.slug}`}>
        {gameTitle}
      </a>
    </h3>
    
    <!-- Description -->
    {description && (
      <p class="text-gray-400 text-sm mb-4 leading-relaxed">
        {getExcerpt(description)}
      </p>
    )}
    
    <!-- Game Details -->
    <div class="space-y-2 mb-4">
      <!-- Developer -->
      {developer && (
        <div class="flex items-center text-sm text-gray-300">
          <svg class="w-4 h-4 mr-2 text-gray-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm2 6a2 2 0 104 0 2 2 0 00-4 0zm8-2a2 2 0 11-4 0 2 2 0 014 0z" clip-rule="evenodd" />
          </svg>
          <a 
            href={`/developers/${developer.slug}`}
            class="hover:text-primary-400 transition-colors"
          >
            {developer.metadata?.studio_name || developer.title}
          </a>
        </div>
      )}
      
      <!-- Rating -->
      {rating && (
        <div class="flex items-center text-sm text-gray-300">
          <svg class="w-4 h-4 mr-2 text-gray-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <span>{rating.value}</span>
        </div>
      )}
    </div>
    
    <!-- Platforms -->
    {platforms.length > 0 && (
      <div class="flex flex-wrap gap-1">
        {platforms.map(platform => (
          <span class="inline-block bg-gray-800 text-gray-300 px-2 py-1 rounded text-xs">
            {platform}
          </span>
        ))}
      </div>
    )}
  </div>
</article>